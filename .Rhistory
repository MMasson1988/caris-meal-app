#Graphe raison absence
graf_clb_ptme<-club_df_ptme%>%
filter(raison_absence!='1- Present')%>%
group_by(club_type,raison_absence)%>%
count()
graf_clb_ptme$raison_absence<-sub("\\d+", "", graf_clb_ptme$raison_absence)
graf_clb_ptme$raison_absence<-sub("[[:punct:]]+", "", graf_clb_ptme$raison_absence)
if(nrow(graf_clb_ptme)==0){
print("Il n'y a pas d'activite")
}else{
graf_clb_ptme%>%
ggplot(aes(fill=club_type, y=n, x=reorder(raison_absence,n))) +
geom_bar(fill='#0099a1',stat="identity",color="black",show.legend = FALSE) +
#scale_fill_brewer(palette = "Dark2")+
geom_label(fill="white",aes(label = format(n,big.mark = ",")),size=3.3)+
ggtitle("") +
coord_flip()+
labs(caption=paste("Data Source: hivhaiti",sep = " / ",Sys.Date())) +
theme_bw()+
theme(
plot.title = element_text(color = "black", size = 14, family="Cambria",face = "bold",hjust = 0.5),
plot.caption = element_text(face="italic",size=10),
axis.text.x = element_text(size = 12,family="Cambria"),
axis.title.y = element_text(size = 12,family = "Cambria"),
strip.text = element_text(size = 12,family="Cambria"))+
xlab("")+
ylab("Fréquence")
}
#quand les données seront disponibles, changer cette période pour le trimestre en cours
clb_ptme_df<-club_s_ptme%>%
select(patient_code,hopital,dob,sex,club_name,club_type,
`session_date(presence)`,last_attendance_date,
is_abandoned,is_dead, graduation, raison_absence)%>%
filter((`session_date(presence)`>="2025-06-16" & `session_date(presence)`<="2025-06-23")
& club_type=='Club Mere' & is_abandoned!=1 & is_dead!=1 & graduation == 'Non')%>%
mutate(mois=paste(lubridate::month(`session_date(presence)`,
label=TRUE,abbr = FALSE),sep=" ",year(`session_date(presence)`)),
site_code = substr(patient_code, 0, 8))
total_ptme<-length(unique(clb_ptme_df$patient_code))
part_ptme_x<-clb_ptme_df%>%
select(raison_absence,patient_code)%>%
filter(raison_absence=='1- Present')
part_ptme<-length(unique(part_ptme_x$patient_code))
df_clb_ptme<-data.frame(var=c("Effectif","Participation"),freq=c(total_ptme,part_ptme))
if(nrow(df_clb_ptme)==0){
print("Il n'y a pas d'activite")
}else{
df_clb_ptme %>%
ggplot(aes(y=freq, x=reorder(var,freq)))+
geom_bar(fill="#00AFBB",stat="identity",color="black",show.legend = F) +
geom_label(aes(label =freq, hjust = 0.5),size=3.3,show.legend = F)+
coord_flip()+
theme_bw()+
labs(caption=paste("Data source: hivhaiti",sep = " / ", Sys.Date()))+
theme(
plot.caption = element_text(face="italic",size = 8))+
xlab("")+
ylab("")
}
if(nrow(clb_ptme_df)==0){
print("Il n'y a pas d'activite")
}else{
datatable(clb_ptme_df, extensions = 'Buttons', filter = 'bottom',
options = list(dom = 'Bfrtip',
columnDefs = list(list(className = 'dt-center', targets = "_all")),
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#800000', 'color': '#fff'});",
"}"),
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
pageLength = 4))
}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
Sys.setenv(TZ='GMT')
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(RMySQL))
suppressPackageStartupMessages(library(odbc))
suppressPackageStartupMessages(library(DBI))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggrepel))
suppressPackageStartupMessages(library(ggiraphExtra))
suppressPackageStartupMessages(library(hrbrthemes))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(tidytext))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(purrr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(tidyr))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(extrafont))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(DT))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(readxl))
suppressPackageStartupMessages(library(writexl))
suppressPackageStartupMessages(library(reticulate))
reticulate::use_python("C:/Users/moise/AppData/Local/Programs/Python/Python313/python.exe")
#use_virtualenv("./../../python_env", required = TRUE)
reticulate::repl_python()
enrole <- read_excel("enrole.xlsx", sheet = 1)
library(ggplot2)
library(viridis)
library(dplyr)
plot_beneficiaries_by_categorie <- function(df, lo_department, set_title, set_xlabel, set_ylabel) {
# Agréger les données
sorted_df <- df %>%
group_by(.data[[lo_department]]) %>%
summarise(count = n()) %>%
arrange(desc(count))
total_active_patients <- sum(sorted_df$count)
# Création du graphique sans lignes de grille
ggplot(sorted_df, aes(x = reorder(.data[[lo_department]], count), y = count, fill = count)) +
geom_col() +
coord_flip() +
geom_text(aes(label = count), hjust = -0.1, size = 4.5) +
scale_fill_viridis(option = "viridis", direction = -1, discrete = FALSE) +
labs(
title = paste0(set_title, "\nTotal bénéficiaires : ", total_active_patients),
x = set_ylabel,
y = set_xlabel,
fill = NULL
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.major = element_blank(),  # Supprime les lignes majeures
panel.grid.minor = element_blank(),  # Supprime les lignes mineures
plot.title = element_text(size = 16, face = "bold"),
axis.text = element_text(face = "bold"),
legend.position = "none"
)
}
# plot
enrole <- read_excel("enrole.xlsx", sheet = 1)
reticulate::repl_python()
enrole <- read_excel("enrole.xlsx", sheet = 1)
reticulate::repl_python()
enrole <- read_excel("enrole.xlsx", sheet = 1)
reticulate::repl_python()
enrole <- read_excel("enrole.xlsx", sheet = 1)
reticulate::repl_python()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
Sys.setenv(TZ='GMT')
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(RMySQL))
suppressPackageStartupMessages(library(odbc))
suppressPackageStartupMessages(library(DBI))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggrepel))
suppressPackageStartupMessages(library(ggiraphExtra))
suppressPackageStartupMessages(library(hrbrthemes))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(tidytext))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(purrr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(tidyr))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(extrafont))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(DT))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(readxl))
suppressPackageStartupMessages(library(writexl))
suppressPackageStartupMessages(library(reticulate))
reticulate::use_python("C:/Users/moise/AppData/Local/Programs/Python/Python313/python.exe")
#use_virtualenv("./../../python_env", required = TRUE)
reticulate::repl_python()
rnut_sans_testing <- py$nut_sans_testing
rnut_sans_testing <- py$nut_sans_testing
reticulate::repl_python()
rnut_sans_testing <- py$nut_sans_testing
rnut_sans_testing <- py$nut_sans_testing
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
Sys.setenv(TZ='GMT')
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(RMySQL))
suppressPackageStartupMessages(library(odbc))
suppressPackageStartupMessages(library(DBI))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggrepel))
suppressPackageStartupMessages(library(ggiraphExtra))
suppressPackageStartupMessages(library(hrbrthemes))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(tidytext))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(purrr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(tidyr))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(extrafont))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(DT))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(readxl))
suppressPackageStartupMessages(library(writexl))
suppressPackageStartupMessages(library(reticulate))
reticulate::use_python("C:/Users/moise/AppData/Local/Programs/Python/Python313/python.exe")
#use_virtualenv("./../../python_env", required = TRUE)
reticulate::repl_python()
rnut_sans_testing <- py$nut_sans_testing
reticulate::repl_python()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
Sys.setenv(TZ='GMT')
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(RMySQL))
suppressPackageStartupMessages(library(odbc))
suppressPackageStartupMessages(library(DBI))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggrepel))
suppressPackageStartupMessages(library(ggiraphExtra))
suppressPackageStartupMessages(library(hrbrthemes))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(tidytext))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(purrr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(tidyr))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(extrafont))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(DT))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(readxl))
suppressPackageStartupMessages(library(writexl))
suppressPackageStartupMessages(library(reticulate))
reticulate::use_python("C:/Users/moise/AppData/Local/Programs/Python/Python313/python.exe")
#use_virtualenv("./../../python_env", required = TRUE)
reticulate::repl_python()
rnut_sans_testing <- py$nut_sans_testing
rnut_sans_testing <- py$nut_sans_testing[[
"caseid", "first_name", "last_name", "name", "age_in_year", "dob","gender","commune","office"]]
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
Sys.setenv(TZ='GMT')
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(RMySQL))
suppressPackageStartupMessages(library(odbc))
suppressPackageStartupMessages(library(DBI))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggrepel))
suppressPackageStartupMessages(library(ggiraphExtra))
suppressPackageStartupMessages(library(hrbrthemes))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(tidytext))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(purrr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(tidyr))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(extrafont))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(DT))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(readxl))
suppressPackageStartupMessages(library(writexl))
suppressPackageStartupMessages(library(reticulate))
reticulate::use_python("C:/Users/moise/AppData/Local/Programs/Python/Python313/python.exe")
#use_virtualenv("./../../python_env", required = TRUE)
reticulate::repl_python()
rnut_sans_testing <- py$nut_sans_testing[[
"caseid", "first_name", "last_name", "name", "age_in_year", "dob","gender","commune","office"]]
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
Sys.setenv(TZ='GMT')
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(RMySQL))
suppressPackageStartupMessages(library(odbc))
suppressPackageStartupMessages(library(DBI))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggrepel))
suppressPackageStartupMessages(library(ggiraphExtra))
suppressPackageStartupMessages(library(hrbrthemes))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(tidytext))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(purrr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(tidyr))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(extrafont))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(DT))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(readxl))
suppressPackageStartupMessages(library(writexl))
suppressPackageStartupMessages(library(reticulate))
reticulate::use_python("C:/Users/moise/AppData/Local/Programs/Python/Python313/python.exe")
#use_virtualenv("./../../python_env", required = TRUE)
reticulate::repl_python()
rnut_sans_testing <- py$nut_sans_testing[[
"caseid", "first_name", "last_name", "name", "age_in_year", "dob","gender","commune","office"]]
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
Sys.setenv(TZ='GMT')
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(RMySQL))
suppressPackageStartupMessages(library(odbc))
suppressPackageStartupMessages(library(DBI))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggrepel))
suppressPackageStartupMessages(library(ggiraphExtra))
suppressPackageStartupMessages(library(hrbrthemes))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(tidytext))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(purrr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(tidyr))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(extrafont))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(DT))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(readxl))
suppressPackageStartupMessages(library(writexl))
suppressPackageStartupMessages(library(reticulate))
reticulate::use_python("C:/Users/moise/AppData/Local/Programs/Python/Python313/python.exe")
#use_virtualenv("./../../python_env", required = TRUE)
reticulate::repl_python()
rnut_sans_testing <- py$nut_sans_testing[[
"caseid", "first_name", "last_name", "name", "age_in_year", "dob","gender","commune","office"]]
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
Sys.setenv(TZ='GMT')
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(RMySQL))
suppressPackageStartupMessages(library(odbc))
suppressPackageStartupMessages(library(DBI))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggrepel))
suppressPackageStartupMessages(library(ggiraphExtra))
suppressPackageStartupMessages(library(hrbrthemes))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(tidytext))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(purrr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(tidyr))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(extrafont))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(DT))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(readxl))
suppressPackageStartupMessages(library(writexl))
suppressPackageStartupMessages(library(reticulate))
reticulate::use_python("C:/Users/moise/AppData/Local/Programs/Python/Python313/python.exe")
#use_virtualenv("./../../python_env", required = TRUE)
reticulate::repl_python()
rnut_sans_comptage <- py$nut_sans_comptage
DT::datatable(
nut_sans_comptage,
extensions = 'Buttons',
filter = 'bottom',
options = list(
dom = 'Bfrtip',
columnDefs = list(list(className = 'dt-center', targets = "_all")),
initComplete = DT::JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#3E4827', 'color': '#fff'});",
"}"
),
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
pageLength = 6
)
)
rnut_sans_comptage <- py$nut_sans_comptage
DT::datatable(
rnut_sans_comptage,
extensions = 'Buttons',
filter = 'bottom',
options = list(
dom = 'Bfrtip',
columnDefs = list(list(className = 'dt-center', targets = "_all")),
initComplete = DT::JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#3E4827', 'color': '#fff'});",
"}"
),
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
pageLength = 6
)
)
rnut_sans_testing <- py$nut_sans_testing[[
"caseid", "first_name", "last_name", "name", "age_in_year", "dob","gender","commune","office"]]
rnut_sans_testing <- py$nut_sans_testing
DT::datatable(
rnut_sans_testing,
extensions = 'Buttons',
filter = 'bottom',
options = list(
dom = 'Bfrtip',
columnDefs = list(list(className = 'dt-center', targets = "_all")),
initComplete = DT::JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#3E4827', 'color': '#fff'});",
"}"
),
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
pageLength = 6
)
)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
Sys.setenv(TZ='GMT')
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(RMySQL))
suppressPackageStartupMessages(library(odbc))
suppressPackageStartupMessages(library(DBI))
suppressPackageStartupMessages(library(viridis))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggrepel))
suppressPackageStartupMessages(library(ggiraphExtra))
suppressPackageStartupMessages(library(hrbrthemes))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(RColorBrewer))
suppressPackageStartupMessages(library(tidytext))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(purrr))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(tidyr))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(extrafont))
suppressPackageStartupMessages(library(forcats))
suppressPackageStartupMessages(library(DT))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(readxl))
suppressPackageStartupMessages(library(writexl))
suppressPackageStartupMessages(library(reticulate))
reticulate::use_python("C:/Users/moise/AppData/Local/Programs/Python/Python313/python.exe")
#use_virtualenv("./../../python_env", required = TRUE)
reticulate::repl_python()
rnut_sans_comptage <- py$nut_sans_comptage
DT::datatable(
rnut_sans_comptage,
extensions = 'Buttons',
filter = 'bottom',
options = list(
dom = 'Bfrtip',
columnDefs = list(list(className = 'dt-center', targets = "_all")),
initComplete = DT::JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#3E4827', 'color': '#fff'});",
"}"
),
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
pageLength = 6
)
)
rnut_sans_testing <- py$nut_sans_testing
DT::datatable(
rnut_sans_testing,
extensions = 'Buttons',
filter = 'bottom',
options = list(
dom = 'Bfrtip',
columnDefs = list(list(className = 'dt-center', targets = "_all")),
initComplete = DT::JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#3E4827', 'color': '#fff'});",
"}"
),
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
pageLength = 6
)
)
rsconnect::setAccountInfo(
name='dashboadcaris',
token='1329F6CE496FB37163837CE4D01A7072',
secret='ABCDEF1234567890ABCDEF1234567890'
)
install.packages("rsconnect")
rsconnect::setAccountInfo(
name='dashboadcaris',
token='1329F6CE496FB37163837CE4D01A7072',
secret='ABCDEF1234567890ABCDEF1234567890'
)
rsconnect::setAccountInfo(name='dashboadcaris',
token='32A5AB0336A3159475368106102ABEAA',
secret='0yHuIOlcL6XdbKHretbh1uNk+ZRyix89LVIFk8gH')
rsconnect::deployApp(appDir = ".", appName = "caris_care_track")
setwd("C:/Users/moise/Downloads/caris-dashboard-app")
setwd("C:/Users/moise/Downloads/dashboard-pvvih")
library(shiny); runApp('C:/Users/moise/Downloads/dashboard-pvvih/caris_care_track_extended.R')
reticulate::repl_python()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
reticulate::repl_python()
reticulate::repl_python()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
reticulate::repl_python()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
reticulate::repl_python()
